import json
from typing import Union, Tuple
import pathlib
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

class QuestionnaireAnalysis:
    """
    Reads and analyzes data generated by the questionnaire experiment.
    Should be able to accept strings and pathlib.Path objects.
    """
    
    def __init__(self, data_fname: Union[pathlib.Path, str]):
        self.data_fname = data_fname
        self.data = None

    def read_data(self):
        """
        Reads the json data located in self.data_fname into memory, to
        the attribute self.data.
        """
        self.data = pd.read_json(self.data_fname)

    def show_age_distrib(self) -> Tuple[np.ndarray, np.ndarray]:
        """
        Calculates and plots the age distribution of the participants.
        Returns a tuple containing two numpy arrays:
        The first item being the number of people in a given bin.
        The second item being the bin edges.
        """
        # groupby age
    def plot_hist (self):
        ax = self.data[['age']].plot(kind='hist',bins=[0,10,20,30,40,40,50,60,70,80,90,100],rwidth=0.8)
        plt.title ('age distribution')
        plt.xlabel('age')
        plt.ylabel('number of people')
        plt.xticks(np.arange(0, 100, step=10))
        ax.get_legend().remove()
        plt.show()

    def calc_dist (self):
        pass

        """Plot the distribution of ages of the participants. 
        The bins for the histogram should be [0, 10), [10, 20), [20, 30),
         ..., [90, 100). The function should return the result."""

    def remove_rows_without_mail(self) -> pd.DataFrame:
        """
        Checks self.data for rows with invalid emails, and removes them.
        Returns the corrected DataFrame, i.e. the same table but with
        the erroneous rows removed and the (ordinal) index after a reset.
        """
        valid_email = self.data['email'].str.contains('@' and '.co')
        df_valid_email = self.data.where(valid_email)
        df_valid_email = df_valid_email.dropna(subset=['email'])
        print (df_valid_email)

if __name__ == "__main__":
    data_fname = 'data.json'
    d = QuestionnaireAnalysis(data_fname)
    d.read_data()
    # print (d.data)
    # d.remove_rows_without_mail()
    d.plot_hist()
    
        
        
